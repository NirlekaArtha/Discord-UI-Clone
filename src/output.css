/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */
@layer properties;
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.left-full {
  left: 100%;
}
.z-10 {
  z-index: 10;
}
.z-50 {
  z-index: 50;
}
.mt-auto {
  margin-top: auto;
}
.ml-auto {
  margin-left: auto;
}
.flex {
  display: flex;
}
.inline {
  display: inline;
}
.inline-block {
  display: inline-block;
}
.h-full {
  height: 100%;
}
.h-screen {
  height: 100vh;
}
.w-fit {
  width: fit-content;
}
.w-full {
  width: 100%;
}
.w-screen {
  width: 100vw;
}
.flex-1 {
  flex: 1;
}
.flex-\[3\] {
  flex: 3;
}
.flex-\[7\] {
  flex: 7;
}
.origin-bottom {
  transform-origin: bottom;
}
.origin-left {
  transform-origin: left;
}
.translate-x-full {
  --tw-translate-x: 100%;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.scale-0 {
  --tw-scale-x: 0%;
  --tw-scale-y: 0%;
  --tw-scale-z: 0%;
  scale: var(--tw-scale-x) var(--tw-scale-y);
}
.-rotate-90 {
  rotate: calc(90deg * -1);
}
.rotate-45 {
  rotate: 45deg;
}
.cursor-pointer {
  cursor: pointer;
}
.flex-col {
  flex-direction: column;
}
.flex-row {
  flex-direction: row;
}
.items-center {
  align-items: center;
}
.justify-center {
  justify-content: center;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-y-scroll {
  overflow-y: scroll;
}
.rounded-\[1\.75rem\] {
  border-radius: 1.75rem;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-b-2 {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 2px;
}
.text-center {
  text-align: center;
}
.text-nowrap {
  text-wrap: nowrap;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-150 {
  --tw-duration: 150ms;
  transition-duration: 150ms;
}
.duration-200 {
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
.ease-linear {
  --tw-ease: linear;
  transition-timing-function: linear;
}
.group-hover\:scale-100 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      --tw-scale-x: 100%;
      --tw-scale-y: 100%;
      --tw-scale-z: 100%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
@layer utilities {
  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }
  .no-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-border-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
